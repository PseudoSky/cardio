#!/usr/bin/env node
var _ = require('underscore'),
    fs = require('fs'),
	unfolder = require('../lib/unfolder');
	stats = require('../lib/stats');

var optimist = require('optimist'),
    commandLineOptions = optimist
        .usage('Transfer output metrics to Graphite')
        .options('h', {
            alias: 'help',
            describe: 'Show this help',
            type: 'boolean',
            default: false
        })
        .options('g', {
            alias: 'grep',
            describe: 'Only process the matched output',
            type: 'string',
        })
        .wrap(72)
        .argv;

if (commandLineOptions.h && commandLineOptions._.length !== 1) {
    optimist.showHelp();
    process.exit(1);
}

var input = commandLineOptions._[0],
	server = commandLineOptions._[1];

var data = fs.readFileSync(input, 'utf-8'),
    jsonData = JSON.parse(data),
    simple = unfolder(jsonData);

// Roll out known stats
var newSimple = {};
_.forEach(simple, function (value, key) {
    // Do maths on numbers that are known to have multiple values
     if (key.indexOf('js.complexityReports') === 0 || key.indexOf('html.nestingLevels') === 0) {
         var extraKeys = stats.stats(value);
         _(extraKeys).forEach(function (value, subKey) {
             newSimple[key + "." + subKey] = value;
         });
     } else if (value.length > 1) {
         console.warn("ERROR: Expected key '" + key + "' to have one element, not " + value.length);
     } else {
         newSimple[key] = value[0];
     }
 });
 simple = newSimple;

// Any grepping?
if (commandLineOptions.grep) {
    var newOutput = {};
    _(simple).forEach(function (value, key) {
        if (key.indexOf(commandLineOptions.grep) !== -1) {
            newOutput[key] = value;
        }
    });
    simple = newOutput;
}

// Final output
console.log(JSON.stringify(simple, null, 4));

// ex: filetype=javascript
